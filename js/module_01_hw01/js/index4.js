'use strict';

/*
  –ù–∞–ø–∏—à–∏—Ç–µ –∫–æ–¥, –∫–æ—Ç–æ—Ä—ã–π –±—ã  —Å –ø–æ–º–æ—â—å—é
  —Ñ—É–Ω–∫—Ü–∏–∏-–∫–æ–Ω—Å—Ç—Ä—É–∫–æ—Ä–∞ User, –ø–æ–∑–≤–æ–ª—è–ª —Å–æ–∑–¥–∞–≤–∞—Ç—å
  –æ–±—ä–µ–∫—Ç—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å–æ —Å–ª–µ–¥—É—é—â–∏–º —Å–≤–æ–π—Å—Ç–≤–∞–º–∏:
    - name - —Å—Ç—Ä–æ–∫–∞ (–∏–º—è)
    - isActive - –±—É–ª—å (–∞–∫—Ç–∏–≤–µ–Ω)
    - age - —á–∏—Å–ª–æ (–≤–æ–∑—Ä–∞—Å—Ç)
    - friends - —á–∏—Å–ª–æ (–∫–æ–ª-–≤–æ –¥—Ä—É–∑–µ–π)

  –ò–º—è, –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å, –≤–æ–∑—Ä–∞—Å—Ç –∏ –¥—Ä—É–∑–µ–π,
  –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –ø–µ—Ä–µ–¥–∞—Ç—å –∫–∞–∫ –∞—Ä–≥—É–º–µ–Ω—Ç—ã
  –ø—Ä–∏ –≤—ã–∑–æ–≤–µ –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä–∞.

  –î–æ–±–∞–≤–∏—Ç—å –º–µ—Ç–æ–¥ getUserInfo(), –∫–æ—Ç–æ—Ä–∞—è, –≤—ã–≤–æ–¥–∏—Ç —Å—Ç—Ä–æ–∫—É:
  `User ${–∏–º—è} is ${–≤–æ–∑—Ä–∞—Å—Ç} years old and has ${–∫–æ–ª-–≤–æ –¥—Ä—É—â–∑–µ–π} friends`

  –°–æ–∑–¥–∞—Ç—å –Ω–µ—Å–∫–æ–ª—å–∫–æ –æ–±—ä–µ–∫—Ç–æ–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è User –∏ —Å –ø–æ–º–æ—â—å—é
  —Ñ—É–Ω–∫—Ü–∏–∏ getUserInfo –≤—ã–≤–µ—Å—Ç–∏ —Å—Ç—Ä–æ–∫—É –≤ –∫–æ–Ω—Å–æ–ª—å.
*/

//----

function User({name, isActive, age, friends}) {
    this.name = name;
    this.isActive = isActive;
    this.age = age;
    this.friends = friends;
}

const jane = new User({age: 25, name: 'Jane', isActive: true, friends: 20});
const james = new User({age: 35, name: 'James', isActive: false, friends: 30});
const gordon = new User({age: 20, name: 'Gordon', isActive: true, friends: 120});
const rebecca = new User({age: 18, name: 'Rebecca', isActive: true, friends: 220});

console.log(jane);
console.log(james);
console.log(gordon);
console.log(rebecca);

//---------------------------------------------------------------------------------------
/*
  –†–∞—Å—Å—Ç–∞–≤—å—Ç–µ –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—â–∏–µ this
  –≤ –º–µ—Ç–æ–¥–∞—Ö –æ–±—ä–µ–∫—Ç–∞ store
*/

const store = {
    products: ['bread', 'cheese', 'milk', 'apples'],
    managers: ['poly', 'mango', 'ajax'],
    addManager(manager) {
        this.managers.push(manager);

        console.log(this.managers);
    },
    removeManager(manager) {
        const idx = this.managers.indexOf(manager);

        this.managers.splice(idx, 1);

        console.log(this.managers);
    },
    getProducts() {
        console.log(this.products);

        return this.products;
    }
}

store.addManager('chelsey'); // ['poly', 'mango', 'ajax', 'chelsey']

store.removeManager('mango'); // ['poly', ajax', 'chelsey']

store.getProducts(); // ['bread', 'cheese', 'milk', 'apples']

//--------------------------------------------------------------------------------------------
/*
  –†–∞—Å—Å—Ç–∞–≤—å—Ç–µ –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—â–∏–µ this –≤ –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä–µ –æ–±—ä–µ–∫—Ç–æ–≤ Account
*/

function Account({login, password, type = "regular"}) {
    this.login = login;
    this.password = password;
    this.type = type;

    this.changePassword = function (newPassword) {
        password = newPassword;
        return password;
    };

    this.getAccountInfo = function () {
        return `
      Login: ${login}, 
      Pass: ${password}, 
      Type: ${type}
    `;
    };
}

const account = new Account({
    login: "Mango",
    password: "qwe123",
    type: "premium"
});

console.log(account.login); // 'Mango'
console.log(account.password); // 'qwe123'
console.log(account.type); // 'premium'

console.log(account.changePassword("asdzxc")); // 'asdzxc'

console.log(account.getAccountInfo()); // Login: 'Mango', Pass: 'asdzxc', Type: 'premium'


//---------------------------------------------------HW------------------------------------------
console.log('----------------------------------------------');
/*
  –°–æ–∑–¥–∞–π—Ç–µ —Å–∫—Ä–∏–ø—Ç –∫–∞—Å—Å–∏—Ä–∞, –∫–æ—Ç–æ—Ä—ã–π –ø–æ–ª—É—á–∞–µ—Ç —Å–ø–∏—Å–æ–∫ –ø—Ä–æ–¥—É–∫—Ç–æ–≤ –∏ –¥–µ–Ω—å–≥–∏,
  –ø–æ–¥—Å—á–∏—Ç—ã–≤–∞–µ—Ç –æ–±—â—É—é —Å—Ç–æ–∏–º–æ—Å—Ç—å –ø—Ä–æ–¥—É–∫—Ç–æ–≤, –∏ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ç–æ–≥–æ —Ö–≤–∞—Ç–∞–µ—Ç
  –¥–µ–Ω–µ–≥ –∏–ª–∏ –Ω–µ—Ç, —É–≤–µ–¥–æ–º–ª—è–µ—Ç –ø–æ–∫—É–ø–∞—Ç–µ–ª—è –æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–µ.
*/

/* –ï—Å—Ç—å –±–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö —Ç–æ–≤–∞—Ä–æ–≤, –≤ —Ñ–æ—Ä–º–∞—Ç–µ "–∏–º—è-—Ç–æ–≤–∞—Ä–∞":"—Ü–µ–Ω–∞ –∑–∞ –æ–¥–Ω—É –µ–¥–∏–Ω–∏—Ü—É" */
const products = {
    bread: 10,
    milk: 15,
    apples: 20,
    chicken: 50,
    cheese: 40,
};

const order = {
    bread: 2,
    milk: 2,
    apples: 1,
    cheese: 1
};

function Cashier(name, products) {
    this.name = name;
    this.productsDatabase = products;
    this.customerMoney = 0;
    this.changeAmount = 0;
    this.totalPrice = 0;
    this.greet = function () {
        return `–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, –≤–∞—Å –æ–±—Å–ª—É–∂–∏–≤–∞–µ—Ç ${this.name}`
    };
    this.onSuccess = function () {
        return this.changeAmount === 0 ? console.log('–°–ø–∞—Å–∏–±–æ –∑–∞ –ø–æ–∫—É–ø–∫—É'): this.changeAmount > 0 ? console.log(`–°–ø–∞—Å–∏–±–æ –∑–∞ –ø–æ–∫—É–ø–∫—É, –≤–∞—à–∞ —Å–¥–∞—á–∞ ${this.changeAmount}`) : this.onError()
    };
    this.onError = function () {
        console.log(`–û—á–µ–Ω—å –∂–∞–ª—å, –≤–∞–º –Ω–µ —Ö–≤–∞—Ç–∞–µ—Ç –¥–µ–Ω–µ–≥ –Ω–∞ –ø–æ–∫—É–ø–∫–∏`)
    };
    this.countTotalPrice = function (order) {
        return this.totalPrice = Object.entries(order).reduce(function(acc, item)
        {
           return acc += order[item[0]]*products[item[0]]
        },0);
    };
    this.getCustomerMoney = function (value) {
        return this.customerMoney = value
    };
    this.countChange =function() {
        return this.changeAmount = this.customerMoney - this.totalPrice
    };
    // - countChange() - –º–µ—Ç–æ–¥, —Å—á–∏—Ç–∞–µ—Ç —Å–¥–∞—á—É, —Ä–∞–∑–Ω–∏—Ü—É –º–µ–∂–¥—É –æ–±—â–µ–π —Å—É–º–º–æ–π –ø–æ–∫—É–ø–æ–∫ –∏ –¥–µ–Ω—å–≥–∞–º–∏ –ø–æ–∫—É–ø–∞—Ç–µ–ª—è,
    //     –∑–∞–ø–∏—Å—ã–≤–∞–µ—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç –≤ –ø–æ–ª–µ changeAmount.
    // * –û–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –ø—Ä–æ–≤–µ—Ä—å—Ç–µ —á—Ç–æ customerMoney –Ω–µ –º–µ–Ω—å—à–µ —á–µ–º –∑–Ω–∞—á–µ–Ω–∏–µ –ø–æ–ª—è totalPrice
    // * –ï—Å–ª–∏ –¥–µ–Ω–µ–≥ –±—ã–ª–æ –ø–µ—Ä–µ–¥–∞–Ω–æ –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ, –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Ç–µ–∫—É—â–µ–µ –∑–Ω–∞—á–µ–Ω–∏–µ changeAmount
    // * –ï—Å–ª–∏ –±—ã–ª–æ –ø–µ—Ä–µ–¥–∞–Ω–æ –º–µ–Ω—å—à–µ –¥–µ–Ω–µ–≥ —á–µ–º –≤ –ø–æ–ª–µ totalPrice, –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç null
    this.reset = function () {
        this.totalPrice = 0;
        this.customerMoney = 0;
        this.changeAmount = 0;
    };
};


/*
  –ù–µ–æ–±—Ö–æ–¥–∏–º–æ —Å–æ–∑–¥–∞—Ç—å —Ñ—É–Ω–∫—Ü–∏—é-–∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä Cashier.

  –ü–æ–ª—è –±—É–¥—É—â–µ–≥–æ –æ–±—ä–µ–∫—Ç–∞ –∫–∞—Å—Å–∏—Ä–∞ (üîî –æ–±—ä—è–≤–ª—è—é—Ç—Å—è –∫–∞–∫ this.–∏–º—è_–ø–æ–ª—è –≤ –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä–µ):
    - name - —Å—Ç—Ä–æ–∫–∞, –∏–º—è –∫–∞—Å—Å–∏—Ä–∞, –ø–µ—Ä–µ–¥–∞–µ—Ç—Å—è –ø—Ä–∏ –≤—ã–∑–æ–≤–µ –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä–∞

    - productsDatabase - –æ–±—ä–µ–∫—Ç –±–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –ø—Ä–æ–¥—É–∫—Ç–æ–≤, –ø–µ—Ä–µ–¥–∞–µ—Ç—Å—è –ø—Ä–∏ –≤—ã–∑–æ–≤–µ –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä–∞

    - totalPrice - —á–∏—Å–ª–æ, –æ–±—â–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å –ø–æ–∫—É–ø–æ–∫ —Ç–µ–∫—É—â–µ–≥–æ –ø–æ–∫—É–ø–∞—Ç–µ–ª—è, –≤—Å–µ–≥–¥–∞ –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è —Å 0

    - customerMoney - —á–∏—Å–ª–æ, —Å—É–º–º–∞ –≤–≤–µ–¥–µ–Ω–Ω–∞—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º –ø—Ä–∏ –∑–∞–ø—Ä–æ—Å–µ –¥–µ–Ω–µ–≥, –≤—Å–µ–≥–¥–∞ –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è —Å 0

    - changeAmount - —á–∏—Å–ª–æ, —Å–¥–∞—á–∞, –≤—Å–µ–≥–¥–∞ –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è —Å 0

    - greet() - –º–µ—Ç–æ–¥, –≤—ã–≤–æ–¥–∏—Ç –≤ –∫–æ–Ω—Å–æ–ª—å —Å—Ç—Ä–æ–∫—É `–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, –≤–∞—Å –æ–±—Å–ª—É–∂–∏–≤–∞–µ—Ç ${–∏–º—è_–∫–∞—Å—Å–∏—Ä–∞}`

    - onSuccess() - –º–µ—Ç–æ–¥, –≤—ã–≤–æ–¥–∏—Ç –≤ –∫–æ–Ω—Å–æ–ª—å —Å—Ç—Ä–æ–∫—É `–°–ø–∞—Å–∏–±–æ –∑–∞ –ø–æ–∫—É–ø–∫—É, –≤–∞—à–∞ —Å–¥–∞—á–∞ ${—Å–¥–∞—á–∞}`
        –µ—Å–ª–∏ —Å–¥–∞—á–∞ –±–æ–ª—å—à–µ 0, –∏ —Å—Ç—Ä–æ–∫—É `–°–ø–∞—Å–∏–±–æ –∑–∞ –ø–æ–∫—É–ø–∫—É` –µ—Å–ª–∏ —Å–¥–∞—á–∞ —Ä–∞–≤–Ω–∞ 0.

    - onError() - –º–µ—Ç–æ–¥, –≤—ã–≤–æ–¥–∏—Ç –≤ –∫–æ–Ω—Å–æ–ª—å —Å—Ç—Ä–æ–∫—É '–û—á–µ–Ω—å –∂–∞–ª—å, –≤–∞–º –Ω–µ —Ö–≤–∞—Ç–∞–µ—Ç –¥–µ–Ω–µ–≥ –Ω–∞ –ø–æ–∫—É–ø–∫–∏'

    - countTotalPrice(order) - –º–µ—Ç–æ–¥, –ø–æ–ª—É—á–∞–µ—Ç —Å–ø–∏—Å–æ–∫ –ø–æ–∫—É–ø–æ–∫, —Å—á–∏—Ç–∞–µ—Ç –æ–±—â—É—é —Å—Ç–æ–∏–º–æ—Å—Ç—å –∏—Å—Ö–æ–¥—è –∏–∑
        –ø–æ–ª—è productsDatabase. –ó–∞–ø–∏—Å—ã–≤–∞–µ—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç –≤ –ø–æ–ª–µ totalPrice.

    - getCustomerMoney(value) - –º–µ—Ç–æ–¥, –ø–æ–ª—É—á–∞–µ—Ç —á–∏—Å–ª–æ - –¥–µ–Ω—å–≥–∏ –ø–æ–∫—É–ø–∞—Ç–µ–ª—è –∏ –∑–∞–ø–∏—Å—ã–≤–∞–µ—Ç –µ–≥–æ –≤ –ø–æ–ª–µ customerMoney

    - countChange() - –º–µ—Ç–æ–¥, —Å—á–∏—Ç–∞–µ—Ç —Å–¥–∞—á—É, —Ä–∞–∑–Ω–∏—Ü—É –º–µ–∂–¥—É –æ–±—â–µ–π —Å—É–º–º–æ–π –ø–æ–∫—É–ø–æ–∫ –∏ –¥–µ–Ω—å–≥–∞–º–∏ –ø–æ–∫—É–ø–∞—Ç–µ–ª—è,
        –∑–∞–ø–∏—Å—ã–≤–∞–µ—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç –≤ –ø–æ–ª–µ changeAmount.
        * –û–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –ø—Ä–æ–≤–µ—Ä—å—Ç–µ —á—Ç–æ customerMoney –Ω–µ –º–µ–Ω—å—à–µ —á–µ–º –∑–Ω–∞—á–µ–Ω–∏–µ –ø–æ–ª—è totalPrice
        * –ï—Å–ª–∏ –¥–µ–Ω–µ–≥ –±—ã–ª–æ –ø–µ—Ä–µ–¥–∞–Ω–æ –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ, –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Ç–µ–∫—É—â–µ–µ –∑–Ω–∞—á–µ–Ω–∏–µ changeAmount
        * –ï—Å–ª–∏ –±—ã–ª–æ –ø–µ—Ä–µ–¥–∞–Ω–æ –º–µ–Ω—å—à–µ –¥–µ–Ω–µ–≥ —á–µ–º –≤ –ø–æ–ª–µ totalPrice, –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç null

    - reset() - –º–µ—Ç–æ–¥, —Å–±—Ä–∞—Å—ã–≤–∞–µ—Ç –ø–æ–ª—è totalPrice, customerMoney –∏ changeAmount –≤ 0.
*/

//function Cashier(name, productsDatabase) {
// üîî –Ω–µ –∑–∞–±—ã–≤–∞–π—Ç–µ –æ this –ø—Ä–∏ –æ–±—Ä–∞—â–µ–Ω–∏–∏ –∫ —Å–≤–æ–π—Å—Ç–≤–∞–º –∏ –º–µ—Ç–æ–¥–∞–º –±—É–¥—É—â–µ–≥–æ –æ–±—ä–µ–∫—Ç–∞
// }

/* –ó–∞–∫–∞–∑ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Ö—Ä–∞–Ω–∏—Ç—Å—è –≤ –≤–∏–¥–µ –æ–±—ä–µ–∫—Ç–∞ —Å–ª–µ–¥—É—é—â–µ–≥–æ —Ñ–æ—Ä–º–∞—Ç–∞. "–∏–º—è-–ø—Ä–æ–¥—É–∫—Ç–∞":"–∫–æ–ª–∏—á–µ—Å—Ç–≤–æ-–µ–¥–∏–Ω–∏—Ü" */
// const order = {
//     bread: 2,
//     milk: 2,
//     apples: 1,
//     cheese: 1
// };

/* –ü—Ä–∏–º–µ—Ä –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è */
const mango = new Cashier('Mango', products);
// console.log('–ü—Ä–æ–≤–µ—Ä—è–µ–º –∏—Å—Ö–æ–¥–Ω—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è –ø–æ–ª–µ–π');
// –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏—Å—Ö–æ–¥–Ω—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è –ø–æ–ª–µ–π
console.log(mango.name); // Mango
console.log(mango.productsDatabase); // —Å—Å—ã–ª–∫–∞ –Ω–∞ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö –ø—Ä–æ–¥—É–∫—Ç–æ–≤ (–æ–±—ä–µ–∫—Ç products)
console.log(mango.totalPrice); // 0
console.log(mango.customerMoney); // 0
console.log(mango.changeAmount); // 0

// –í—ã–∑—ã–≤–∞–µ–º –º–µ—Ç–æ–¥ greet
console.log(mango.greet()); // –ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, –≤–∞—Å –æ–±—Å–ª—É–∂–∏–≤–∞–µ—Ç Mango

// –í—ã–∑—ã–≤–∞–µ–º –º–µ—Ç–æ–¥ countTotalPrice –¥–ª—è –ø–æ–¥—Å—á–µ—Ç–∞ –æ–±—â–µ–π —Å—É–º–º—ã
// –ø–µ—Ä–µ–¥–∞–≤–∞—è order - —Å–ø–∏—Å–æ–∫ –ø–æ–∫—É–ø–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
console.log(mango.countTotalPrice(order));

// –ü—Ä–æ–≤–µ—Ä—è–º —á—Ç–æ –ø–æ—Å—á–∏—Ç–∞–ª–∏
console.log(`total price: ${mango.totalPrice}`); // 110

// –í—ã–∑—ã–≤–∞–µ–º getCustomerMoney –¥–ª—è –∑–∞–ø—Ä–æ—Å–∞ –¥–µ–Ω–µ–≥ –ø–æ–∫—É–ø–∞—Ç–µ–ª—è
mango.getCustomerMoney(300);

// –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –≤ –ø–æ–ª–µ —Å –¥–µ–Ω—å–≥–∞–º–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
console.log(`customerMoney: ${mango.customerMoney}`); // 300

// –í—ã–∑—ã–≤–∞–µ–º countChange –¥–ª—è –ø–æ–¥—Å—á–µ—Ç–∞ —Å–¥–∞—á–∏
const result = mango.countChange();

// –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –Ω–∞–º –≤–µ—Ä–Ω—É–ª countChange
console.log(`countChange: ${result}`); // 190

// –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç –ø–æ–¥—Å—á–µ—Ç–∞ –¥–µ–Ω–µ–≥
if (result !== null) {
    // –ü—Ä–∏ —É—Å–ø–µ—à–Ω–æ–º –æ–±—Å–ª—É–∂–∏–≤–∞–Ω–∏–∏ –≤—ã–∑—ã–≤–∞–µ–º –º–µ—Ç–æ–¥ onSuccess
    mango.onSuccess(); // –°–ø–∞—Å–∏–±–æ –∑–∞ –ø–æ–∫—É–ø–∫—É, –≤–∞—à–∞ —Å–¥–∞—á–∞ 190
} else {
    // –ü—Ä–∏ –Ω–µ—É–¥–∞—á–Ω–æ–º –æ–±—Å–ª—É–∂–∏–≤–∞–Ω–∏–∏ –≤—ã–∑—ã–≤–∞–µ–º –º–µ—Ç–æ–¥ onError
    mango.onError(); // –û—á–µ–Ω—å –∂–∞–ª—å, –≤–∞–º –Ω–µ —Ö–≤–∞—Ç–∞–µ—Ç –¥–µ–Ω–µ–≥ –Ω–∞ –ø–æ–∫—É–ø–∫–∏
}

// –í—ã–∑—ã–≤–∞–µ–º reset –ø—Ä–∏ –ª—é–±–æ–º –∏—Å—Ö–æ–¥–µ –æ–±—Å–ª—É–∂–∏–≤–∞–Ω–∏—è
mango.reset();

// –ü—Ä–æ–≤–µ—Ä—è–µ–º –∑–Ω–∞—á–µ–Ω–∏—è –ø–æ–ª–µ–π –ø–æ—Å–ª–µ reset
console.log(mango.totalPrice); // 0
console.log(mango.customerMoney); // 0
console.log(mango.changeAmount); // 0